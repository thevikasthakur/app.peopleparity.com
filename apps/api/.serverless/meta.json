{
  "/Users/thakur/Workspace/ppv1/time-tracker/apps/api/serverless.yml": {
    "versionFramework": "4.18.2",
    "servicePath": "/Users/thakur/Workspace/ppv1/time-tracker/apps/api/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "pp-be",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "profile": "pp-api",
        "runtime": "nodejs22.x",
        "region": "ap-south-1",
        "stage": "dev",
        "memorySize": 10240,
        "timeout": 900,
        "logRetentionInDays": 14,
        "httpApi": {
          "cors": true
        },
        "tracing": {
          "lambda": true
        },
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps",
          "STAGE": "dev",
          "SCREENSHOTS_BUCKET": "pp-tracker-screenshots-dev",
          "DATABASE_HOST": "aws-1-ap-south-1.pooler.supabase.com",
          "DATABASE_PORT": "6543",
          "DATABASE_USER": "postgres.wbqjfspfleboymnvkkte",
          "DATABASE_PASSWORD": "<REDACTED>",
          "DATABASE_NAME": "postgres",
          "JWT_SECRET": "<REDACTED>",
          "JWT_EXPIRATION": "7d",
          "PORT": "3001",
          "NODE_ENV": "development",
          "SUPER_ADMIN_EMAIL": "admin@peopleparity.com",
          "SUPER_ADMIN_PASSWORD": "<REDACTED>",
          "SAML_ENTRY_POINT": "https://login.microsoftonline.com/383cc6fe-545e-4fab-8276-0c78ac6258f7/saml2",
          "SAML_ISSUER": "PeopleParity",
          "SAML_CLIENT_ID": "PeopleParity",
          "SAML_CALLBACK_URL": "http://localhost:3001/api/auth/saml/callback",
          "SAML_CERT": "-----BEGIN CERTIFICATE-----\nMIIC8DCCAdigAwIBAgIQcNr6w7TexKlOQiRcfM3EkTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNTA4MjAxNzA4\nMDVaFw0yODA4MjAxNzA4MDVaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4B+KN+dY3vNS\nNOySyWE6KS90Eeg9TC54XpYrWZj/dKI0gtEcfvm2hSvqKfDX5pDLUBB/SOe00Gz0OELqDZ6Tgg78\nM5lyKNQHpxg7g0rnKzNpI+j2uc5gS9eMK27N1GQxpnS/GqpF3N4iXuQYP8X4s2yNTleRfmjttrHW\nf4YSlp9l5zGHjdt8cs+JaBNupcAxPKFh2vBBWkab95O+UpjsOv/E3BnIyp/+R+kXmyaHvSk5hAEG\n74UcMKmBrSUYpa0R+CTpIb6YtPMkzwYkESGoqtvQkNahaIAr0i94ZWC/H33gvaapqTO84GwUF/pJ\nzQkmCjTglK5V4OKMxuzA+N+wCQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDGprNWc6nrUiEQmiF3\nNDgqumqmxhLafGe3iMFaEJhGkuZge4ZpiqU8AdaK6KYnvzZ8may/rm0uj5z4RIufs6hkAed0OVrC\nHTw2bVHqgwHc8iMXouy7gzz8tvn54yGq69rZkEWg3/spgvGFR1ZZudXHIPkQp5irLG9f63iyi1cF\nC2T0Wl5PgkGZVkM+s8hU0AiYshSYYd5i73IPNFEvDoLV69GqUU6RRobMUlm5oUuaNohht3+6ZRp7\ncfuxmh/dKbjYWc4jfB1/Na4YL+hmoaFRqtaY39AyLSQDkpvThq2Wgl55CbxKhlSnXlTao+4pDcBr\nXyQ9nY0Lnh+p0dOEqU8o\n-----END CERTIFICATE-----",
          "FRONTEND_URL": "http://localhost:5174"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListBucket"
                ],
                "Resource": "arn:aws:s3:::pp-tracker-screenshots-dev"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:DeleteObject"
                ],
                "Resource": "arn:aws:s3:::pp-tracker-screenshots-dev/*"
              }
            ]
          }
        },
        "versionFunctions": true
      },
      "functions": {
        "api": {
          "handler": "src/lambda.handler",
          "events": [
            {
              "httpApi": {
                "method": "ANY",
                "path": "/{proxy+}"
              }
            },
            {
              "httpApi": {
                "method": "ANY",
                "path": "/"
              }
            }
          ],
          "name": "pp-be-dev-api"
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-dotenv-plugin"
      ],
      "build": {
        "esbuild": {
          "bundle": true,
          "platform": "node",
          "format": "cjs",
          "target": "node22",
          "sourcemap": true,
          "keepNames": true,
          "minify": false,
          "packages": "external"
        }
      },
      "custom": {
        "screenshotsBucket": "pp-tracker-screenshots-dev",
        "dotenv": {
          "logging": false
        },
        "serverless-offline": {
          "httpPort": 3001,
          "lambdaPort": 3002,
          "noPrependStageInUrl": true,
          "timeout": 60,
          "host": "0.0.0.0"
        }
      },
      "resources": {
        "Resources": {
          "ScreenshotsBucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
              "BucketName": "pp-tracker-screenshots-dev",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              },
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ScreenshotsBucketName": {
            "Value": "pp-tracker-screenshots-dev",
            "Export": {
              "Name": "pp-be-dev-ScreenshotsBucketName"
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "profile": "pp-api",
      "runtime": "nodejs22.x",
      "region": "ap-south-1",
      "stage": "dev",
      "memorySize": 10240,
      "timeout": 900,
      "logRetentionInDays": 14,
      "httpApi": {
        "cors": true
      },
      "tracing": {
        "lambda": true
      },
      "environment": {
        "NODE_OPTIONS": "--enable-source-maps",
        "STAGE": "dev",
        "SCREENSHOTS_BUCKET": "pp-tracker-screenshots-dev",
        "DATABASE_HOST": "aws-1-ap-south-1.pooler.supabase.com",
        "DATABASE_PORT": "6543",
        "DATABASE_USER": "postgres.wbqjfspfleboymnvkkte",
        "DATABASE_PASSWORD": "<REDACTED>",
        "DATABASE_NAME": "postgres",
        "JWT_SECRET": "<REDACTED>",
        "JWT_EXPIRATION": "7d",
        "PORT": "3001",
        "NODE_ENV": "development",
        "SUPER_ADMIN_EMAIL": "admin@peopleparity.com",
        "SUPER_ADMIN_PASSWORD": "<REDACTED>",
        "SAML_ENTRY_POINT": "https://login.microsoftonline.com/383cc6fe-545e-4fab-8276-0c78ac6258f7/saml2",
        "SAML_ISSUER": "PeopleParity",
        "SAML_CLIENT_ID": "PeopleParity",
        "SAML_CALLBACK_URL": "http://localhost:3001/api/auth/saml/callback",
        "SAML_CERT": "-----BEGIN CERTIFICATE-----\nMIIC8DCCAdigAwIBAgIQcNr6w7TexKlOQiRcfM3EkTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yNTA4MjAxNzA4\nMDVaFw0yODA4MjAxNzA4MDVaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4B+KN+dY3vNS\nNOySyWE6KS90Eeg9TC54XpYrWZj/dKI0gtEcfvm2hSvqKfDX5pDLUBB/SOe00Gz0OELqDZ6Tgg78\nM5lyKNQHpxg7g0rnKzNpI+j2uc5gS9eMK27N1GQxpnS/GqpF3N4iXuQYP8X4s2yNTleRfmjttrHW\nf4YSlp9l5zGHjdt8cs+JaBNupcAxPKFh2vBBWkab95O+UpjsOv/E3BnIyp/+R+kXmyaHvSk5hAEG\n74UcMKmBrSUYpa0R+CTpIb6YtPMkzwYkESGoqtvQkNahaIAr0i94ZWC/H33gvaapqTO84GwUF/pJ\nzQkmCjTglK5V4OKMxuzA+N+wCQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDGprNWc6nrUiEQmiF3\nNDgqumqmxhLafGe3iMFaEJhGkuZge4ZpiqU8AdaK6KYnvzZ8may/rm0uj5z4RIufs6hkAed0OVrC\nHTw2bVHqgwHc8iMXouy7gzz8tvn54yGq69rZkEWg3/spgvGFR1ZZudXHIPkQp5irLG9f63iyi1cF\nC2T0Wl5PgkGZVkM+s8hU0AiYshSYYd5i73IPNFEvDoLV69GqUU6RRobMUlm5oUuaNohht3+6ZRp7\ncfuxmh/dKbjYWc4jfB1/Na4YL+hmoaFRqtaY39AyLSQDkpvThq2Wgl55CbxKhlSnXlTao+4pDcBr\nXyQ9nY0Lnh+p0dOEqU8o\n-----END CERTIFICATE-----",
        "FRONTEND_URL": "http://localhost:5174"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": "arn:aws:s3:::pp-tracker-screenshots-dev"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Resource": "arn:aws:s3:::pp-tracker-screenshots-dev/*"
            }
          ]
        }
      },
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Build failed with 1 error:\nsrc/app.module.ts:21:25: ERROR: Could not resolve \"./entities/activity.entity\"",
      "stack": "ServerlessError2: Build failed with 1 error:\nsrc/app.module.ts:21:25: ERROR: Could not resolve \"./entities/activity.entity\"\n    at Esbuild._build (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1346:16316)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async before:offline:start (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1346:4650)\n    at async PluginManager.runHooks (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1398:9865)\n    at async PluginManager.invoke (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1398:10575)\n    at async PluginManager.run (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1398:11364)\n    at async Serverless.run (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1405:10523)\n    at async runFramework (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1432:1777)\n    at async TraditionalRunner.run (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1428:28331)\n    at async route (file:///Users/thakur/.serverless/releases/4.18.2/package/dist/sf-core.js:1603:2878)",
      "code": "ESBULD_BUILD_ERROR"
    },
    "serviceRawFile": "service: pp-be\nframeworkVersion: \"4\"\n\nprovider:\n  name: aws\n  profile: pp-api\n  runtime: nodejs22.x\n  region: ap-south-1\n  stage: ${opt:stage, 'dev'}\n  memorySize: 10240\n  timeout: 900\n  logRetentionInDays: 14\n  httpApi:\n    cors: true\n  tracing:\n    lambda: true\n  environment:\n    NODE_OPTIONS: --enable-source-maps\n    STAGE: ${sls:stage}\n    SCREENSHOTS_BUCKET: ${self:custom.screenshotsBucket}\n\n  # Lambda execution role permissions (scoped to this stage's bucket)\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - s3:ListBucket\n          Resource:\n            - arn:aws:s3:::${self:custom.screenshotsBucket}\n        - Effect: Allow\n          Action:\n            - s3:GetObject\n            - s3:PutObject\n            - s3:DeleteObject\n            # (add s3:PutObjectAcl if you ever set ACLs)\n          Resource:\n            - arn:aws:s3:::${self:custom.screenshotsBucket}/*\n\nfunctions:\n  api:\n    handler: src/lambda.handler\n    events:\n      - httpApi:\n          method: ANY\n          path: \"/{proxy+}\"\n      - httpApi:\n          method: ANY\n          path: \"/\"\n\nplugins:\n  - serverless-offline\n  - serverless-dotenv-plugin\n\n# Built-in Serverless v4 builder\nbuild:\n  esbuild:\n    bundle: true\n    platform: node\n    format: cjs\n    target: node22\n    sourcemap: true\n    keepNames: true\n    minify: false\n    packages: external\n\ncustom:\n  screenshotsBucket: pp-tracker-screenshots-${sls:stage}\n\n  dotenv:\n    logging: false\n  \n  serverless-offline:\n    httpPort: 3001\n    lambdaPort: 3002\n    noPrependStageInUrl: true\n    timeout: 60\n    host: 0.0.0.0\n\nresources:\n  Resources:\n    ScreenshotsBucket:\n      Type: AWS::S3::Bucket\n      DeletionPolicy: Retain # keep data if stack is removed\n      UpdateReplacePolicy: Retain\n      Properties:\n        BucketName: ${self:custom.screenshotsBucket}\n        PublicAccessBlockConfiguration:\n          BlockPublicAcls: true\n          BlockPublicPolicy: true\n          IgnorePublicAcls: true\n          RestrictPublicBuckets: true\n        BucketEncryption:\n          ServerSideEncryptionConfiguration:\n            - ServerSideEncryptionByDefault:\n                SSEAlgorithm: AES256\n        # Optional CORS (enable if you upload directly from browsers)\n        # CorsConfiguration:\n        #   CorsRules:\n        #     - AllowedMethods: [GET, PUT, POST, DELETE, HEAD]\n        #       AllowedOrigins: ['*']   # tighten in prod\n        #       AllowedHeaders: ['*']\n        #       MaxAge: 3000\n\n  Outputs:\n    ScreenshotsBucketName:\n      Value: ${self:custom.screenshotsBucket}\n      Export:\n        Name: ${self:service}-${sls:stage}-ScreenshotsBucketName\n",
    "command": [
      "offline"
    ],
    "options": {
      "aws-profile": "pp-api",
      "stage": "dev"
    },
    "orgId": "41bacf36-57dd-4c88-951a-5deb47ab05ab",
    "orgName": "socialmediaautomation",
    "userId": "pHsfZxFT3xTb3gQ7Tf",
    "userName": "socialmediaautomation",
    "serviceProviderAwsAccountId": "957634529359",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:957634529359:stack/pp-api-dev/491d45e0-8ce5-11f0-bd78-0acbf0e51ffb",
    "serviceProviderAwsCfStackCreated": "2025-09-08T18:54:46.012Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:957634529359:function:pp-api-dev-api:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-pp-api-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ScreenshotsBucketName",
        "OutputValue": "pp-tracker-screenshots-dev",
        "ExportName": "pp-api-dev-ScreenshotsBucketName"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "55p4tw00m0",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-pp-api-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-south-1-c597c975-9d49",
        "ExportName": "sls-pp-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://55p4tw00m0.execute-api.ap-south-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-pp-api-dev-HttpApiUrl"
      }
    ]
  }
}