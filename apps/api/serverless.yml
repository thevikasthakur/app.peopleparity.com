service: ppv1
frameworkVersion: "4"

provider:
  name: aws
  profile: pp-api
  runtime: nodejs22.x
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  memorySize: 3008
  timeout: 31
  logRetentionInDays: 14
  httpApi:
    cors: true
  tracing:
    lambda: true
  environment:
    NODE_OPTIONS: --enable-source-maps
    STAGE: ${sls:stage}
    SCREENSHOTS_BUCKET: ${self:custom.screenshotsBucket}

  # Lambda execution role permissions (scoped to this stage's bucket)
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:custom.screenshotsBucket}
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            # (add s3:PutObjectAcl if you ever set ACLs)
          Resource:
            - arn:aws:s3:::${self:custom.screenshotsBucket}/*

functions:
  api:
    handler: src/lambda.handler
    events:
      - httpApi:
          method: ANY
          path: "/{proxy+}"
      - httpApi:
          method: ANY
          path: "/"

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

# Built-in Serverless v4 builder
build:
  esbuild:
    bundle: true
    platform: node
    format: cjs
    target: node22
    sourcemap: true
    keepNames: true
    minify: false
    packages: external

custom:
  screenshotsBucket: ${self:service}-screenshots-${sls:stage}

  dotenv:
    logging: false

  serverless-offline:
    httpPort: 3001
    lambdaPort: 3002
    noPrependStageInUrl: true
    timeout: 60
    host: 0.0.0.0

resources:
  Resources:
    ScreenshotsBucket:
      Type: AWS::S3::Bucket
      # DeletionPolicy: Retain # keep data if stack is removed
      # UpdateReplacePolicy: Retain
      Properties:
        BucketName: ${self:custom.screenshotsBucket}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: false
          IgnorePublicAcls: true
          RestrictPublicBuckets: false
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
       
    ScreenshotsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref ScreenshotsBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            # Public read for ONLY thumbnails under inzint/*/thumb/*
            - Sid: PublicReadThumbs
              Effect: Allow
              Principal: "*"
              Action: s3:GetObject
              Resource:
                - !Sub arn:aws:s3:::${self:custom.screenshotsBucket}/inzint/*/thumb/*

  Outputs:
    ScreenshotsBucketName:
      Value: ${self:custom.screenshotsBucket}
      Export:
        Name: ${self:service}-${sls:stage}-ScreenshotsBucketName
